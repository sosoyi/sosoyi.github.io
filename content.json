[{"title":"更改apt源","date":"2016-12-26T13:17:46.000Z","path":"2016-12/26/change-apt-source/","text":"修改 apt-get 为 阿里源 参考http://mirrors.aliyun.com/ 备份原始文件12$ sudo mv /etc/apt/sources.list /etc/apt/sources.list.bak$ sudo mv /etc/apt/sources.list.d/raspi.list /etc/apt/sources.list.d/raspi.list.bak 创建 /etc/apt/sources.list 文件12$ sudo touch /etc/apt/sources.list$ sudo vim /etc/apt/sources.list 编辑 /etc/apt/sources.list 文件内容，保存退出12deb http://mirrors.aliyun.com/raspbian/raspbian/ jessie main non-free contrib rpideb-src http://mirrors.aliyun.com/raspbian/raspbian/ jessie main non-free contrib rpi 更新12$ sudo apt-get update$ sudo apt-get upgrade --fix-missing","categories":[{"name":"树莓派","slug":"raspberry","permalink":"https://sosoyi.github.io/categories/raspberry/"}],"tags":[{"name":"raspberry","slug":"raspberry","permalink":"https://sosoyi.github.io/tags/raspberry/"},{"name":"apt-get","slug":"apt-get","permalink":"https://sosoyi.github.io/tags/apt-get/"}]},{"title":"树莓派连接红外接收模块","date":"2016-12-24T07:05:53.000Z","path":"2016-12/24/infraed-receiving-module-hx1888/","text":"文中图片来自于我购买硬件的商铺，没有广告 插拔硬件请断电 目标 给树莓派给安装个红外接收管 录制遥控信息 准备 树莓派 红外接收模块 杜邦线 遥控器 硬件说明 名称 描述 说明 图片 红外接收模块 1. 传感器采用HX1838，灵敏度高2. 工作电压5V3. 输出形式:数字量输出4. 设有固定螺栓孔，方便安装5. 小板PCB尺寸：1.9cm * 1.4cm6. 电源指示灯（红色） 1. VCC 外接5V2. GND 外接GND3. DO 小板数字量输出接口 名称 描述 说明 图片 遥控器 1. 遥控范围：8-10米（红外接收头本身质量,中间有无障碍物等因素会影响到遥控距离）2. 电池：3V扣式锂锰电池3. 红外载波频率：38KHz4. 电源指示灯（红色） 开发1. 硬件连接 树莓派针脚请查看 树莓派针脚图 红外模块 树莓派 VCC &lt;===&gt; GPIO针脚 pin2 (VCC) GND &lt;===&gt; GPIO针脚 pin6（GND） OUT &lt;===&gt; GPIO针脚 pin12 (管脚18，默认) 2. 软件树莓派配置lirc安装lirc12pi@raspberrypi:~/smartHome $ git clone git://git.code.sf.net/p/lirc/git repository/lircpi@raspberrypi:~/smartHome $ cd 修改配置文件 在 /boot/config.txt 文件后面添加下面这一句，这一句就是树莓派添加Device Tree设备 1234$ sudo vim /boot/config.txt# 修改或者添加下面代码# 默认输入针脚为18，可以省略dtoverlay=lirc-rpi,gpio_in_pin=18 /boot/overlays/README 文件中我们可以找到详细说明 编辑 LRIC 的配置文件使能红外线功能1pi@raspberrypi:~/smartHome $ sudo vim /etc/lirc/hardware.conf 修改 /etc/modules12lirc_devlirc_rpi gpio_in_pin=18 gpio_out_pin=17 加载驱动 运行 lsmod 命令查看设备是否已启动 执行 sudo modprobe lirc_rpi， 默认会加上 (输入)gpio_in_pin=18 (输出)gpio_out_pin=17 1pi@raspberrypi:~/smartHome $ sudo modprobe lirc_rpi 根据自己需要自定义可以修改, 跳线也需要连接相应的针脚1pi@raspberrypi:~/smartHome $ sudo modprobe lirc_rpi gpio_in_pin=23 gpio_out_pin=24 运行测试脉冲 每按一次按键都应该会显示一组’pulse’ / ‘space’信息 1pi@raspberrypi:~/smartHome $ sudo mode2 -d /dev/lirc0 按遥控上任何键，查看是否接收到类似脉冲 每按一次按键都应该会显示一组’pulse’ / ‘space’信息 123456pulse 5481743space 9126pulse 4485space 620pulse 509space 653 # 录制按键查看可以使用的key列表，随后输入key必须在这列表里1pi@raspberrypi:~/smartHome $ irrecord --list-namespace 编辑 LRIC 的配置文件1pi@raspberrypi:~/smartHome $ sudo vim /etc/lirc/hardware.conf 录制前需要关闭lirc1pi@raspberrypi:~/smartHome $ sudo /etc/init.d/lirc stop ####### 开始录制，开始后需要随便按键通过2*80的调试1pi@raspberrypi:~/smartHome $ irrecord -n -d /dev/lirc0 lircd.conf 当调试完成后，会出现以下提示，这时候我们要录制按键。 123456789101112131415Press RETURN now to start recording.................................................................................Found const length: 108416Please keep on pressing buttons like described above.................................................................................Space/pulse encoded remote control found.Signal length is 67.Found possible header: 9104 4473Found trail pulse: 626Found repeat code: 9106 2204Signals are space encoded.Signal length is 32Now enter the names for the buttons.Please enter the name for the next button (press &lt;ENTER&gt; to finish recording) 录制按键 输入key,回车，然后按遥控器对应按键，录制成功 复制 lircd.conf 到 /etc/lirc/ 下1pi@raspberrypi:~/smartHome $ sudo cp lircd.conf /etc/lirc/lircd.conf 重新载入配置:12pi@raspberrypi:~/smartHome $ sudo /etc/init.d/lirc stoppi@raspberrypi:~/smartHome $ sudo /etc/init.d/lirc start 运行调试1pi@raspberrypi:~ $ sudo lircd --nodaemon --device /dev/lirc0 --driver default 重新打开一个窗口 输入如下命令，调试窗口，会有连接信息 1pi@raspberrypi:~ $ irw 按遥控器按键会有如下输出 123450000000000ffe01f 00 KEY_VOLUMEDOWN lircd.conf0000000000ffe01f 01 KEY_VOLUMEDOWN lircd.conf0000000000ffa857 00 KEY_VOLUMEUP lircd.conf0000000000ff18e7 00 KEY_NUMERIC_2 lircd.conf0000000000ff30cf 00 KEY_NUMERIC_1 lircd.conf 修改 /etc/lirc/hardware.conf123456789101112131415161718192021# /etc/lirc/hardware.conf## Arguments which will be used when launching lircdLIRCD_ARGS=&quot;&quot;#Don&apos;t start lircmd even if there seems to be a good config file#START_LIRCMD=false#Don&apos;t start irexec, even if a good config file seems to exist.#START_IREXEC=false#Try to load appropriate kernel modulesLOAD_MODULES=true# Run &quot;lircd --driver=help&quot; for a list of supported drivers.DRIVER=&quot;default&quot;# usually /dev/lirc0 is the correct setting for systems using udevDEVICE=&quot;/dev/lirc0&quot;MODULES=&quot;lirc_rpi&quot;# Default configuration files for your hardware if anyLIRCD_CONF=&quot;&quot;LIRCMD_CONF=&quot;&quot; 启动lircd1pi@raspberrypi:~ $ sudo lircd 重启树莓派1pi@raspberrypi:~ $ sudo reboot","categories":[{"name":"树莓派","slug":"raspberry","permalink":"https://sosoyi.github.io/categories/raspberry/"}],"tags":[{"name":"raspberry","slug":"raspberry","permalink":"https://sosoyi.github.io/tags/raspberry/"},{"name":"smartHome","slug":"smartHome","permalink":"https://sosoyi.github.io/tags/smartHome/"}]},{"title":"我的树莓派","date":"2016-12-23T15:35:34.000Z","path":"2016-12/23/my-raspberry/","text":"树莓派B+(CN) Broadcom BCM2835 700MHz ARM1176JZFS 配备 FPU 处理器，4核 GPU 处理器 GPU 支持 Open GL ES 2.0, OpenVG 硬件加速，1080p30 H.264 高清解码 GPU 带宽 1Gpixel/s, 1.5Gtexel/s or 24GFLOPs DMA 纹理解析 512 MB 内存 支持Micro SD 卡启动 Linux 操作系统，如 Fedora 10/100 自适应网卡 HDMI 接口 USB 2.0 接口 x 4 Micro SD 卡插槽 microUSB 接口供电 3.5 mm 音频输出接口 摄像头排针接口 外形尺寸：85 x 56 x 17 mm 安装系统作案工具 Micro SD 读卡器 16G Micro SD 一张（推荐Class10） 系统镜像 官方2016-11-25-raspbian-jessie-lite SD格式化工具 SDFormatter 烧录软件 （针对windows系统：Win32 Disk Imager） 格式化SD卡 我原来已经安装过系统，所以我选择了覆盖安装 烧录镜像Mac查看镜像123$ lltotal 600584-rwxrwxrwx@ 1 xiaoyi staff 293M 12 23 19:11 2016-11-25-raspbian-jessie-lite.zip 123$ unzip 2016-11-25-raspbian-jessie-lite.zip # 解压得到img镜像Archive: 2016-11-25-raspbian-jessie-lite.zipinflating: 2016-11-25-raspbian-jessie-lite.img 1234$ lltotal 3316232-rw-r--r--@ 1 xiaoyi staff 1.3G 11 26 01:56 2016-11-25-raspbian-jessie-lite.img-rwxrwxrwx@ 1 xiaoyi staff 293M 12 23 19:11 2016-11-25-raspbian-jessie-lite.zip 插入SD卡，用df命令查看当前已挂载的卷1234567$ df -hFilesystem Size Used Avail Capacity iused ifree %iused Mounted on/dev/disk1 930Gi 60Gi 870Gi 7% 1263919 4293703360 0% /devfs 185Ki 185Ki 0Bi 100% 639 0 100% /devmap -hosts 0Bi 0Bi 0Bi 100% 0 0 100% /netmap auto_home 0Bi 0Bi 0Bi 100% 0 0 100% /home/dev/disk2s1 15Gi 3.3Mi 15Gi 1% 0 0 100% /Volumes/RASPBERRY 对比Size 和 Mounted on 列，找到U盘，我这里是 /dev/disk2s1 卸载分区12$ diskutil unmount /dev/disk2s1Volume RASPBERRY on disk2s1 unmounted 确认磁盘12345678910111213141516171819$ diskutil list/dev/disk0 (internal, physical): #: TYPE NAME SIZE IDENTIFIER 0: GUID_partition_scheme *1.0 TB disk0 1: EFI EFI 209.7 MB disk0s1 2: Apple_CoreStorage Macintosh HD 999.3 GB disk0s2 3: Apple_Boot Recovery HD 650.0 MB disk0s3/dev/disk1 (internal, virtual): #: TYPE NAME SIZE IDENTIFIER 0: Macintosh HD +999.0 GB disk1 Logical Volume on disk0s2 06B268FB-F929-4E56-8E39-FC71ECC36FCC Unencrypted/dev/disk2 (external, physical): #: TYPE NAME SIZE IDENTIFIER 0: FDisk_partition_scheme *15.9 GB disk2 1: Windows_FAT_32 RASPBERRY 15.9 GB disk2s1 镜像写入（一定要确认再确认disk后面的数字） 说明：/dev/disk2s1是分区，/dev/disk2是块设备，/dev/rdisk2是原始字符设备 1$ sudo dd bs=4m if=2016-11-25-raspbian-jessie-lite.img of=/dev/rdisk2 一只羊，两只羊，四只羊，八只羊，十六只羊…………….. 出现下面的提示，说明SD卡刷好了 12331+1 records in331+1 records out1390411776 bytes transferred in 114.280768 secs (12166630 bytes/sec) 卸载设备12$ diskutil unmountDisk /dev/disk2Unmount of all volumes on disk2 was successful 现在就可以拔下SD卡，插到树莓派上启动系统了。 Window 自行搜索教程（盗图） 运行系统 首次安装系统，默认不开启SSH，所以首次运行还需要连接一台HDMI接口显示器，进行配置。 系统默认用户 pi 系统默认密码 raspberry 运行配置命令1$ sudo raspi-config 选择 7 Advanced Options 选择 A4 SSH, 开启选项","categories":[{"name":"树莓派","slug":"raspberry","permalink":"https://sosoyi.github.io/categories/raspberry/"}],"tags":[{"name":"raspberry","slug":"raspberry","permalink":"https://sosoyi.github.io/tags/raspberry/"}]},{"title":"树莓派针脚图","date":"2016-12-22T06:48:54.000Z","path":"2016-12/22/raspberry-pi-pins-version-40/","text":"树莓派40Pin引脚对照表 本表格适用于树莓派B+、树莓派2B、树莓派A+，并且兼容树莓派B，树莓派B为26Pin，其引脚对应于上表的前26Pin。 本文转载自：树莓派 40Pin 引脚对照表","categories":[{"name":"树莓派","slug":"raspberry","permalink":"https://sosoyi.github.io/categories/raspberry/"}],"tags":[{"name":"raspberry","slug":"raspberry","permalink":"https://sosoyi.github.io/tags/raspberry/"}]},{"title":"欢迎使用Hexo","date":"2016-12-20T06:48:54.000Z","path":"2016-12/20/hello-world/","text":"欢迎使用 Hexo ! 这是你生成的第一篇文章.从 官方文档 获取More info. 如果你在使用中遇到任何问题, 你可以从 这里 找到解决方案，或者你可以在 GitHub 提问. 快速开始创建一个新的文章1$ hexo new \"My New Post\" More info: Writing 在本地运行服务1$ hexo server More info: Server 生成本地文件1$ hexo generate More info: Generating 发布到站点1$ hexo deploy More info: Deployment 常用命令12345$ hexo new &quot;postName&quot; #新建文章$ hexo new page &quot;pageName&quot; #新建页面$ hexo generate #生成静态页面至public目录$ hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）$ hexo deploy #将.deploy目录部署到GitHub 常用复合命令12$ hexo d -g #生成加部署$ hexo s -g #预览加部署 简写1234$ hexo n == hexo new$ hexo g == hexo generate$ hexo s == hexo server$ hexo d == hexo deploy","categories":[{"name":"Hexo 使用攻略","slug":"hexo","permalink":"https://sosoyi.github.io/categories/hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://sosoyi.github.io/tags/Hexo/"}]}]